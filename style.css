@import url('https://fonts.googleapis.com/css?family=Mukta:400,500&display=swap');
@import url('https://fonts.googleapis.com/css?family=Exo+2:300,400,500&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Libre+Baskerville:ital,wght@0,700;1,400&display=swap');


* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}
body {
  min-height: 100vh;
  background: #f2f2f2;
  background-size: 50px;
  font-family: 'Exo 2', 'Mukta', sans-serif;
  border-top: 10px solid #89468b;
}

p {
	line-height: 1.5em;
}

h1 {
	font-family: baskerville-display-pt, serif;
	font-weight: 700;
	font-style: italic;
	border-bottom: 5px solid #CFB5D0;
}

h4 {
	margin-bottom: 10px;
	border-bottom: 3px solid #CFB5D0;
	padding-bottom: 5px;
}

/* by default display the contents in a column */
.container {
  display: flex;
  flex-direction: column;
  max-width: 450px;
  width: 95vw;
  margin: 1rem auto;
}
/* by default separate the containers vertically */
.container > * + * {
  margin-top: 1rem;
}

/* for grid-supporting devices */
@supports (display: grid) {
  /* for wide enough viewports */
  @media (min-width: 700px) {
    /* display the three components in a grid

        .input            .input
        .spreadsheet      .chart
        */
    .container {
      display: grid;
      max-width: 750px;
      grid-template-areas: 'input input' 'spreadsheet chart';
      grid-template-columns: 1fr 1fr;
      grid-gap: 1rem;
    }
    .container .input {
      grid-area: input;
    }
    .container .spreadsheet {
      grid-area: spreadsheet;
    }
    /* align the .chart to the beginning of the row, to avoid stretching the element when the sibling .spreadsheet becomes taller */
    .container .chart {
      grid-area: chart;
      align-self: start;
    }

    /* remove the margin applied by default between the flex children */
    .container > * + * {
      margin-top: 0;
    }
  }
}

/* for all meaningful containers
describe a card layout with a white background and considerable padding
*/
.container .input,
.container .spreadsheet,
.container .chart {
  background: hsl(0, 0%, 100%);
  padding: 1.5rem 1.25rem;
  box-shadow: 0 2px 10px -5px hsl(210, 85%, 10%);
  /* position relative for the icons */
  position: relative;
}
/* absolute position the icons at alternating corners of the containers */
.container .input .icon,
.container .spreadsheet .icon,
.container .chart .icon {
  position: absolute;
  filter: drop-shadow(0 1px 5px hsla(210, 90%, 30%, 0.2));
}
.container .input .icon {
  top: 0;
  right: 0;
  transform: rotate(20deg);
}
.container .spreadsheet .icon {
  top: 0;
  left: 0;
  transform: rotate(-20deg);
}
.container .chart .icon {
  bottom: 0;
  right: 0;
  transform: rotate(10deg);
}

/* first component
separate the direct children vertically */
.container .input > * + * {
  margin-top: 1rem;
}
/* have the textarea expand to cover the width of the container, and a fixed height */
.container .input textarea {
  display: block;
  width: 100%;
  height: 200px;
  font-family: inherit;
  resize: none;
  font-size: 1rem;
  padding: 0.5rem;
  line-height: 1.5;
  /* style the outline with a color matching the palette */
  border: 2px solid #ffc600;
  outline-color: hsl(210, 90%, 60%);
}
/* display the .controls button in a row */
.container .input .controls {
  display: flex;
  align-items: center;
}
/* separate the buttons horizontally */
.container .input .controls > * + * {
  margin-left: 0.75rem;
}
/* style the buttons to have opposing color and background values */
.container .input .controls button {
  padding: 0.25rem 1rem;
  color: hsl(0, 0%, 100%);
  background: #ffc600;
  border: 2px solid #ffc600;
  border-radius: 4px;
  font-size: 1rem;
  font-family: inherit;
  outline-color: hsl(210, 90%, 60%);
}

.container .input .controls button:hover {
    color: #ffc600;
    background: hsl(0, 0%, 100%);
}

.container .input .controls button:last-of-type {
  color: #ffc600;
  background: hsl(0, 0%, 100%);
}


.container .input .controls button:last-of-type:hover {
    background: #ffc600;
	color: #ffffff;
}


/* second component
dedicate half a width to each column */
.container .spreadsheet table {
  width: 100%;
  border-collapse: collapse;
  text-align: center;
  table-layout: fixed;
}
.container .spreadsheet table tr {
  line-height: 2.5;
}
.container .spreadsheet table tr th {
  text-transform: uppercase;
  font-size: 1.25rem;
  width: 50%;
  background: #ffc600;
  border-bottom: 2px solid #ffd74d;
  color: hsl(0, 0%, 100%);
  font-weight: 500;
}
/* alternate the background color of the cells describing the data */
.container .spreadsheet table tr:nth-of-type(even) td {
  background: #f2f2f2;
}
.container .spreadsheet table tr:nth-of-type(odd) td {
  background: #ffffff;
}

/* third component
have the svg expand to cover the available width and height */
.container .chart .graphic {
  width: 100%;
  height: auto;
  color: #ffc600;
}
.container .chart .graphic text {
  color: hsl(240, 70%, 5%);
}

.green {
	color: green;
}

.red {
	color: red;
}

/* Tooltip container */
.tooltip {
  position: relative;
  display: inline-block;
  border-bottom: 1px dotted black; /* If you want dots under the hoverable text */
}

/* Tooltip text */
.tooltip .tooltiptext {
  visibility: hidden;
  width: 300px;
  background-color: #174e98;
  color: #fff;
  text-align: center;
  padding: 10px 10px;
  border-radius: 6px;
  line-height: 1.2em;

  /* Position the tooltip text */
  position: absolute;
  z-index: 1;
  bottom: 125%;
  left: 50%;
  margin-left: -60px;

  /* Fade in tooltip */
  opacity: 0;
  transition: opacity 0.3s;
}

/* Tooltip arrow */
.tooltip .tooltiptext::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: #555 transparent transparent transparent;
}

/* Show the tooltip text when you mouse over the tooltip container */
.tooltip:hover .tooltiptext {
  visibility: visible;
  opacity: 1;
}

.fa-circle-info {
	color: #c9c7c7;
}

.title a {
	border-bottom: 0px;
}